{
    "scope": "text.html.dust",
    "completions": [
        {
            "trigger": "ds|dust-section",
            "contents": "{#${1:section-name}}\n\t${2}\n{/${1}}",
        },
        {
            "trigger": "db|dust-block",
            "contents": "{+${1:block-name}}\n\t${2}\n{/${1}}"
        },
        {
            "trigger": "dy|dust-yes-exists",
            "contents": "{?${1:name}}${2}{/${1}}"
        },
        {
            "trigger": "dn|dust-no-exists",
            "contents": "{^${1:name}}${2}{/${1}}"
        },
        {
            "trigger": "dp|dust-partial",
            "contents": "{>\"${1:path/to/partial}\"/}"
        },
        {
            "trigger": "dpp|dust-partial-params",
            "contents": "{>\"${1:path/to/partial}\" ${2: params }/}${0}"
        },
        {
            "trigger": "dpd|dust-partial-dynamic",
            "contents": "{>\"${1:path/to/partial}{${2:dynamic-param}}\"/}"
        },
        {
            "trigger": "deq|dust-equals",
            "contents": "{@eq value=\"${1:bar}\"}${2}{/eq}"
        },
        {
            "trigger": "dne|dust-not-equals",
            "contents": "{@ne key=\"${1:foo}\" value=\"${2:foo}\"}${3}{/ne}"
        },
        {
            "trigger": "dlt|dust-less-than",
            "contents": "{@lt value=${1:XX}}${2}{/lt}"
        },
        {
            "trigger": "dlte|dust-less-than-equals",
            "contents": "{@lte value=${1:XX}}${2}{/lte}"
        },
        {
            "trigger": "dgt|dust-greater-than",
            "contents": "{@gt value=${1:XX}}${2}{/gt}"
        },
        {
            "trigger": "dgte|dust-greater-than-equals",
            "contents": "{@gte value=${1:XX}}${2}{/gte}"
        },
        {
            "trigger": "dm|dust-math",
            "contents": "{@math key=\"${1:XX}\" method=\"${2:XX}\" operand=\"${3:XX}\" round=\"${4:true|false}\"/}"
        },
        {
            "trigger": "dma|dust-math-add",
            "contents": "{@math key=\"${1:XX}\" method=\"add\" operand=\"${2:XX}\"/}"
        },
        {
            "trigger": "dms|dust-math-subtract",
            "contents": "{@math key=\"${1:XX}\" method=\"subtract\" operand=\"${2:XX}\"/}"
        },
        {
            "trigger": "dmm|dust-math-multiply",
            "contents": "{@math key=\"${1:XX}\" method=\"multiply\" operand=\"${2:XX}\"/}"
        },
        {
            "trigger": "dmd|dust-math-divide",
            "contents": "{@math key=\"${1:XX}\" method=\"divide\" operand=\"${2:XX}\"/}"
        },
        {
            "trigger": "dmr|dust-math-round",
            "contents": "{@math key=\"${1:XX.5}\" method=\"round\"/}"
        },
        {
            "trigger": "dmf|dust-math-floor",
            "contents": "{@math key=\"${1:XX.5}\" method=\"floor\"/}"
        },
        {
            "trigger": "dmc|dust-math-ceil",
            "contents": "{@math key=\"${1:XX.5}\" method=\"ceil\"/}"
        },
        {
            "trigger": "dmabs|dust-math-abs",
            "contents": "{@math key=\"${1:XX.5}\" method=\"abs\"/}"
        },
        {
            "trigger": "dmeq|dust-math-eq-filter",
            "contents": "{@math key=\"${1:-XX}\" method=\"${2:abs}\"}\n\t{@eq value=${3:XX}}\n\t\t${4}\n\t{/eq}\n{/math}"
        },
        {
            "trigger": "dselect-block-with-key-and-type|dust",
            "contents": "{@select key=\"${1:foo}\" type=\"${2:string}\"}\n\t${3}\n{/select}"
        },
        {
            "trigger": "dselect-multi-condition-default|dust",
            "contents": "{@select key=\"${1:foo}\"}\n\t{@eq value=\"${2:bar}\"}${3:bar}{/eq}\n\t{@eq value=\"${4:baz}\"}${5:baz}{/eq}\n\t{@eq value=\"${6:biz}\"}${7:biz}{/eq}\n\t{@default value=\"${8:default\"}}${9:default}{/default}\n{/select}"
        },
        {
            "trigger": "dselect-inside-array|dust",
            "contents": "{#array}\n\t{@select key=${1:.}}\n\t\t{@eq value=\"${2:foo}\"}${3:foo}{/eq}\n\t\t{@eq value=\"${4:bar}\"}${5:bar}{/eq}\n\t\t{@default value=\"${6:default}\"}${7:default}{/default}\n\t{/select}\n{/array}"
        },
        {
            "trigger": "dsize-with-empty-key|dust",
            "contents": "{@size key=\"${1}\"/}"
        },
        {
            "trigger": "dsize-with-string-key|dust",
            "contents": "{${1:mystring}} has {@size key=${2:mystring}/} letters"
        },
        {
            "trigger": "dcontext-dump|dust",
            "contents": "{@contextDump/}"
        },
        {
            "trigger": "dcontext-dump-to-console|dust",
            "contents": "{@contextDump to=\"console\"/}"
        },
        {
            "trigger": "dcontext-dump-full-test|dust",
            "contents": "{@contextDump key=\"full\"/}"
        },
        {
            "trigger": "dcontext-dump-function-dump-test|dust",
            "contents": "{#aa param=\"{p}\"}{@contextDump key=\"full\"/}{/aa}"
        },
        {
            "trigger": "dsep-partial-in-array|dust",
            "contents": "{#n}{>hello_there name=. count=\"30\"/}{@sep} {/sep}{/n}"
        },
        {
            "trigger": "dsep-partial-in-async-iterator|dust",
            "contents": "{#numbers}{#delay}{.}{/delay}{@sep}, {/sep}{/numbers}"
        },
        {
            "trigger": "darray-with-index|dust",
            "contents": "{#list}\n\t{idx}${1}. {.}\n{/list}"
        },
        {
            "trigger": "darray-implicit|dust",
            "contents": "{#${1:array}}{.}{~n}{/${1:array}}"
        },
        {
            "trigger": "df-suppress-auto-escape|dust",
            "contents": "{${1:name}|s}"
        }
    ]
}