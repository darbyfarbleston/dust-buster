fileTypes: [dust]
name: Dust
patterns:
- {include: '#yfm'}
- {include: '#block_comments'}
- {include: '#comments'}
- {include: '#block_helper'}
- {include: '#block_end'}
- {include: '#partial_and_var'}
- {include: '#html_tags'}
- {include: text.html.basic}
repository:
  block_comments:
    patterns:
    - begin: '\{!'
      end: '\}'
      name: comment.block.dust
      patterns:
      - begin: '\s*(\<)'
        end: '\>\s'
      - {match: '@\w*', name: keyword.annotation.html}
      - begin: '\s*(\{)'
        end: '\}\s'
      - {match: '@\w*', name: keyword.annotation.dust}
  block_helper:
    begin: (\{)(\+|\?|\^|\@|\#)([-a-zA-Z0-9_\./]+)\s?(@?[-a-zA-Z0-9_\./]+)*
    beginCaptures:
      '1': {name: support.constant.dust}
      '3': {name: variable.parameter.dust}
    end: (~?\})
    endCaptures:
      '1': {name: variable.parameter.dust}
      '2': {name: support.constant.dust}
    name: meta.function.block.start.dust
    patterns:
    - {include: '#string'}
  comments:
    patterns:
    - {begin: '(\{!)\s(\{\@|\<)', end: '\!\}', name: comment.dust}
    - begin: <!--
      captures:
        '0': {name: punctuation.definition.comment.html}
      end: -{2,3}\s*>
      name: comment.block.html
      patterns:
      - {match: --, name: invalid.illegal.bad-comments-or-CDATA.html}
  block_end:
    begin: (\{~?/)([a-zA-Z0-9_\.-]+)\s*
    beginCaptures:
      '1': {name: variable.parameter.dust}
      '2': {name: variable.parameter.dust}
    end: (~?\})
    endCaptures:
      '1': {name: variable.parameter.dust}
    name: meta.function.block.end.dust
    patterns: []
  entities:
    patterns:
    - captures:
        '1': {name: punctuation.definition.entity.html}
        '2': {name: punctuation.definition.entity.html}
        '3': {name: punctuation.definition.entity.html}
      match: (&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)
      name: constant.character.entity.html
    - {match: '&', name: invalid.illegal.bad-ampersand.html}
  escaped-double-quote: {match: \\", name: constant.character.escape.js}
  escaped-single-quote: {match: \\', name: constant.character.escape.js}
  html_tags:
    patterns:
    - begin: (<)([a-zA-Z0-9:-]+)(?=[^>]*></\2>)
      beginCaptures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: entity.name.tag.html}
      end: (>(<)/)(\2)(>)
      endCaptures:
        '1': {name: punctuation.definition.tag.html}
        '2': {name: meta.scope.between-tag-pair.html}
        '3': {name: entity.name.tag.html}
        '4': {name: punctuation.definition.tag.html}
      name: meta.tag.any.html
      patterns:
      - {include: '#tag-stuff'}
  partial_and_var:
    begin: (\{~?(\+|\^|\>|\#|\?)*)\s*(@?[-a-zA-Z0-9_\./]+)*
    beginCaptures:
      '1': {name: support.constant.dust}
      '3': {name: support.constant.dust}
    end: (~?\}*)
    endCaptures:
      '1': {name: support.constant.dust}
    name: meta.function.inline.other.dust
    patterns:
    - {include: '#string'}
  string:
    patterns:
    - {include: '#string-single-quoted'}
    - {include: '#string-double-quoted'}
  string-double-quoted:
    begin: '"'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: '"'
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    name: string.quoted.double.dust
    patterns:
    - {include: '#comments'}
    - {include: '#block_comments'}
    - {include: '#comments'}
    - {include: '#helpers_start'}
    - {include: '#helpers_end'}
    - {include: '#partial_and_var'}
  string-single-quoted:
    begin: ''''
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: ''''
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    name: string.quoted.single.dust
    patterns:
    - {include: '#block_comments'}
    - {include: '#comments'}
    - {include: '#helpers_start'}
    - {include: '#helpers_end'}
    - {include: '#partial_and_var'}
  tag-stuff:
    patterns:
    - {include: '#tag_id_attribute'}
    - {include: '#tag_generic_attribute'}
    - {include: '#string'}
    - {include: '#block_comments'}
    - {include: '#comments'}
    - {include: '#helpers_start'}
    - {include: '#helpers_end'}
    - {include: '#partial_and_var'}
  tag_generic_attribute:
    begin: \b([a-zA-Z0-9_-]+)\b\s*(=)
    captures:
      '1': {name: entity.other.attribute-name.generic.html}
      '2': {name: punctuation.separator.key-value.html}
    end: (?<='|"|)
    name: entity.other.attribute-name.html
    patterns:
    - {include: '#string'}
  tag_id_attribute:
    begin: \b(id)\b\s*(=)
    captures:
      '1': {name: entity.other.attribute-name.id.html}
      '2': {name: punctuation.separator.key-value.html}
    end: (?<='|"|)
    name: meta.attribute-with-value.id.html
    patterns:
    - {include: '#string'}
  yfm:
    patterns:
    - begin: (?<!\s)---\n$
      end: ^---\s
      name: markup.raw.yaml.front-matter
      patterns:
      - {include: source.yaml}
scopeName: text.html.dust
uuid: d5e33b2e-ca20-40a8-bf55-8c16e32b04d4
